{"version":3,"sources":["components/Stats.js","components/StopWatch.js","components/Header.js","components/Counter.js","components/Icon.js","components/Player.js","components/AddPlayerForm.js","components/App.js","index.js"],"names":["Stats","props","totalPlayers","players","length","totalPoints","reduce","total","player","score","react_default","a","createElement","className","StopWatch","state","isRunning","elapsedTime","previousTime","tick","_this","now","Date","setState","prevState","handleStopwatch","handleReset","_this2","this","intervalID","setInterval","clearInterval","seconds","Math","floor","onClick","Component","Header","_ref","title","components_Stats","components_StopWatch","defaultProps","Counter","index","changeScore","Icon","viewBox","isHighScore","d","transform","width","height","Player","console","log","concat","name","_this$props","id","removePlayer","components_Icon","components_Counter","PureComponent","AddPlayerForm","value","handleValueChange","e","target","handleSubmit","preventDefault","addPlayer","onSubmit","type","onChange","placeholder","App","prevPlayerId","handleScoreChange","delta","handleAddPlayer","Object","toConsumableArray","handleRemovePlayer","filter","p","getHighScore","scores","map","highScore","max","apply","components_Header","components_Player","key","toString","components_AddPlayerForm","ReactDOM","render","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.875e8d97.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Stats = props => {\n  const totalPlayers = props.players.length;\n\n  const totalPoints = props.players.reduce((total, player) => {\n    return total + player.score;\n  }, 0);\n  return (\n    <table className=\"stats\">\n      <tbody>\n        <tr>\n          <td>Players:</td>\n          <td>{totalPlayers}</td>\n        </tr>\n        <tr>\n          <td>Total Points:</td>\n          <td>{totalPoints}</td>\n        </tr>\n      </tbody>\n    </table>\n  );\n};\n\nStats.propTypes = {\n  players: PropTypes.arrayOf(\n    PropTypes.shape({\n      score: PropTypes.number.isRequired\n    })\n  )\n};\n\nexport default Stats;\n","import React, { Component } from \"react\";\n\nclass StopWatch extends Component {\n  state = {\n    isRunning: false,\n    elapsedTime: 0,\n    previousTime: 0\n  };\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 100);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.intervalID);\n  }\n\n  tick = () => {\n    if (this.state.isRunning) {\n      const now = Date.now();\n      this.setState(prevState => ({\n        previousTime: now,\n        elapsedTime: prevState.elapsedTime + (now - this.state.previousTime)\n      }));\n    }\n  };\n\n  handleStopwatch = () => {\n    this.setState(prevState => ({\n      isRunning: !prevState.isRunning\n    }));\n    if (!this.state.isRunning) {\n      this.setState({ previousTime: Date.now() });\n    }\n  };\n  handleReset = () => {\n    this.setState({ elapsedTime: 0 });\n  };\n\n  render() {\n    const seconds = Math.floor(this.state.elapsedTime / 1000);\n    return (\n      <div className=\"stopwatch\">\n        <h2>StopWatch</h2>\n        <span className=\"stopwatch-time\">{seconds}</span>\n        <button onClick={this.handleStopwatch}>\n          {this.state.isRunning ? \"Stop\" : \"Start\"}\n        </button>\n        <button onClick={this.handleReset}>Reset</button>\n      </div>\n    );\n  }\n}\n\nexport default StopWatch;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Stats from \"./Stats\";\nimport StopWatch from \"./StopWatch\";\n\nconst Header = ({ players, title }) => {\n  return (\n    <header>\n      <Stats players={players} />\n      <h1>{title}</h1>\n      <StopWatch />\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  players: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired\n};\n\nHeader.defaultProps = {\n  title: \"Scoreboard\"\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Counter = ({ index, score, changeScore }) => {\n  return (\n    <div className=\"counter\">\n      <button\n        className=\"counter-action decrement\"\n        onClick={() => changeScore(index, -1)}\n      >\n        {\" \"}\n        -{\" \"}\n      </button>\n      <span className=\"counter-score\">{score}</span>\n      <button\n        className=\"counter-action increment\"\n        onClick={() => changeScore(index, 1)}\n      >\n        {\" \"}\n        +{\" \"}\n      </button>\n    </div>\n  );\n};\n\nCounter.propTypes = {\n  index: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  changeScore: PropTypes.func.isRequired\n};\n\nexport default Counter;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Icon = props => {\n  return (\n    <svg\n      viewBox=\"0 0 44 35\"\n      className={props.isHighScore ? \"is-high-score\" : null}\n    >\n      <path\n        d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\"\n        transform=\"translate(0 0.301727)\"\n      />\n      <rect\n        width=\"30.4986\"\n        height=\"3.07759\"\n        transform=\"translate(6.56987 31.5603)\"\n      />\n    </svg>\n  );\n};\n\nIcon.propTypes = {\n  isHighScore: PropTypes.bool\n};\n\nexport default Icon;\n","import React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Counter from \"./Counter\";\nimport Icon from \"./Icon\";\n\nclass Player extends PureComponent {\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    score: PropTypes.number.isRequired,\n    index: PropTypes.number.isRequired,\n    changeScore: PropTypes.func.isRequired,\n    removePlayer: PropTypes.func.isRequired,\n    isHighScore: PropTypes.bool\n  };\n  render() {\n    console.log(`${this.props.name} rendered`);\n    // destructuring assignment in a class is done with a variable assignment\n    const { id, name, score, index, changeScore, removePlayer } = this.props;\n    return (\n      <div className=\"player\">\n        <span className=\"player-name\">\n          <button className=\"remove-player\" onClick={() => removePlayer(id)}>\n            ✖\n          </button>\n          <Icon isHighScore={this.props.isHighScore} />\n          {name}\n        </span>\n\n        <Counter score={score} index={index} changeScore={changeScore} />\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React, { Component } from \"react\";\n\nclass AddPlayerForm extends Component {\n  state = {\n    value: \"\"\n  };\n\n  handleValueChange = e => {\n    this.setState({ value: e.target.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.addPlayer(this.state.value);\n    this.setState({ value: \"\" });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          value={this.state.value}\n          onChange={this.handleValueChange}\n          placeholder=\"Enter a player's name\"\n        />\n        <input type=\"submit\" value=\"Add Player\" />\n      </form>\n    );\n  }\n}\n\nexport default AddPlayerForm;\n","import React, { Component } from \"react\";\nimport Header from \"./Header\";\nimport Player from \"./Player\";\nimport AddPlayerForm from \"./AddPlayerForm\";\n\nclass App extends Component {\n  state = {\n    players: [\n      {\n        name: \"Bill\",\n        score: 0,\n        id: 1\n      },\n      {\n        name: \"Burt\",\n        score: 0,\n        id: 2\n      },\n      {\n        name: \"Boz\",\n        score: 0,\n        id: 3\n      },\n      {\n        name: \"Benicio\",\n        score: 0,\n        id: 4\n      }\n    ]\n  };\n\n  prevPlayerId = 4;\n\n  handleScoreChange = (index, delta) => {\n    this.setState(prevState => ({\n      score: (prevState.players[index].score += delta)\n    }));\n  };\n\n  handleAddPlayer = name => {\n    this.setState(prevState => {\n      return {\n        players: [\n          ...prevState.players,\n          {\n            name: name,\n            score: 0,\n            id: (this.prevPlayerId += 1)\n          }\n        ]\n      };\n    });\n  };\n\n  handleRemovePlayer = id => {\n    this.setState(prevState => {\n      return {\n        players: prevState.players.filter(p => p.id !== id)\n      };\n    });\n  };\n\n  getHighScore = () => {\n    const scores = this.state.players.map(p => p.score);\n    const highScore = Math.max(...scores);\n    if (highScore) {\n      return highScore;\n    }\n    return null;\n  };\n\n  render() {\n    const highScore = this.getHighScore();\n    return (\n      <div className=\"scoreboard\">\n        <Header title=\"Scoreboard\" players={this.state.players} />\n\n        {this.state.players.map((player, index) => (\n          <Player\n            name={player.name}\n            score={player.score}\n            id={player.id}\n            key={player.id.toString()}\n            index={index}\n            removePlayer={this.handleRemovePlayer}\n            changeScore={this.handleScoreChange}\n            isHighScore={highScore === player.score}\n          />\n        ))}\n        <AddPlayerForm addPlayer={this.handleAddPlayer} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}